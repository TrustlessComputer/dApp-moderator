basePath: /dapp-moderator/v1
definitions:
  response.JsonResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.RespondErr'
      status:
        type: boolean
    type: object
  response.RedisResponse:
    properties:
      value:
        type: string
    type: object
  response.RespondErr:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  structure.GenerateMessage:
    properties:
      address:
        type: string
      walletType:
        type: string
    type: object
  structure.VerifyMessage:
    properties:
      address:
        type: string
      addressBTC:
        description: taproot address
        type: string
      addressBTCSegwit:
        type: string
      addressPayment:
        type: string
      ethsignature:
        type: string
      messagePrefix:
        type: string
      signature:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server TC-DAPP server.
  title: tcDAPP APIs
  version: 1.0.0
paths:
  /auth/nonce:
    post:
      consumes:
      - application/json
      description: Generate a message for user's wallet
      parameters:
      - description: Generate message request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structure.GenerateMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Generate a message
      tags:
      - Auth
  /auth/nonce/verify:
    post:
      consumes:
      - application/json
      description: Verified the generated message
      parameters:
      - description: Verify message request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structure.VerifyMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Verified the generated message
      tags:
      - Auth
  /bfs-service/browse/{walletAddress}:
    get:
      consumes:
      - application/json
      description: Browse files of a wallet (uploader's wallet address)
      parameters:
      - description: walletAddress
        in: path
        name: walletAddress
        required: true
        type: string
      - description: path
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Browse files of a wallet
      tags:
      - BFS-service
  /bfs-service/content/{walletAddress}:
    get:
      consumes:
      - application/json
      description: Get file content of a wallet address (uploader's wallet address)
      parameters:
      - description: walletAddress
        in: path
        name: walletAddress
        required: true
        type: string
      - description: path
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get content file
      tags:
      - BFS-service
  /bfs-service/files/{walletAddress}:
    get:
      consumes:
      - application/json
      description: Get files of a wallet (uploader's wallet address)
      parameters:
      - description: walletAddress
        in: path
        name: walletAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get files of a wallet
      tags:
      - BFS-service
  /bfs-service/info/{walletAddress}:
    get:
      consumes:
      - application/json
      description: Get file info of a wallet address (uploader's wallet address)
      parameters:
      - description: walletAddress
        in: path
        name: walletAddress
        required: true
        type: string
      - description: path
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get file info
      tags:
      - BFS-service
  /bns-explorer/bns:
    get:
      consumes:
      - application/json
      description: get Bns
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: get Bns
      tags:
      - BNS-explorer
  /nft-explorer/collections:
    get:
      consumes:
      - application/json
      description: Get Collections
      parameters:
      - description: owner
        in: query
        name: owner
        type: string
      - description: contract
        in: query
        name: contract
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: default deployed_at_block
        in: query
        name: sort_by
        type: string
      - description: default -1
        in: query
        name: sort
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get Collections
      tags:
      - nft-explorer
  /nft-explorer/collections/{contractAddress}:
    get:
      consumes:
      - application/json
      description: Get Collections
      parameters:
      - description: contractAddress
        in: path
        name: contractAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get Collections
      tags:
      - nft-explorer
  /nft-explorer/collections/{contractAddress}/nfts:
    get:
      consumes:
      - application/json
      description: Get nfts of a Collectionc
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: contractAddress
        in: path
        name: contractAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get nfts of a Collectionc
      tags:
      - nft-explorer
  /nft-explorer/collections/{contractAddress}/nfts/{tokenID}:
    get:
      consumes:
      - application/json
      description: Get nft detail of a Collection
      parameters:
      - description: contractAddress
        in: path
        name: contractAddress
        required: true
        type: string
      - description: tokenID
        in: path
        name: tokenID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get nft detail of a Collection
      tags:
      - nft-explorer
  /nft-explorer/collections/{contractAddress}/nfts/{tokenID}/content:
    get:
      consumes:
      - application/json
      description: Get nft content of a Collection
      parameters:
      - description: contractAddress
        in: path
        name: contractAddress
        required: true
        type: string
      - description: tokenID
        in: path
        name: tokenID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get nft content of a Collection
      tags:
      - nft-explorer
  /nft-explorer/nfts:
    get:
      consumes:
      - application/json
      description: Get Nfts
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get Nfts
      tags:
      - nft-explorer
  /nft-explorer/owner-address/{ownerAddress}/nfts:
    get:
      consumes:
      - application/json
      description: Get nfts of a wallet address
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: ownerAddress
        in: path
        name: ownerAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get nfts of a wallet address
      tags:
      - nft-explorer
  /quicknode/address/{walletAddress}/balance:
    get:
      consumes:
      - application/json
      description: getaddress balance
      parameters:
      - description: BTC walletAddress
        in: path
        name: walletAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.RedisResponse'
                  type: array
              type: object
      summary: qn_addressBalance RPC Method
      tags:
      - QuickNode
  /token-explorer/search:
    get:
      consumes:
      - application/json
      description: search tokens
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: searching key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: search tokens
      tags:
      - token-explorer
  /token-explorer/token/{address}:
    get:
      consumes:
      - application/json
      description: Get token detail
      parameters:
      - description: contractAddress
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get token detail
      tags:
      - token-explorer
  /token-explorer/tokens:
    get:
      consumes:
      - application/json
      description: Get tokens
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get tokens
      tags:
      - token-explorer
  /wallets/{walletAddress}:
    get:
      consumes:
      - application/json
      description: Get Wallet's info
      parameters:
      - description: walletAddress
        in: path
        name: walletAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JsonResponse'
      summary: Get Wallet's info
      tags:
      - Wallet
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
