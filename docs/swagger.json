{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Autonomous devices management server.",
        "title": "Generative.xyz APIs",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/dapp-moderator/v1",
    "paths": {
        "/nft-explorer/collections": {
            "get": {
                "description": "Get Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get Collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{collectionAddress}": {
            "get": {
                "description": "Get Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get Collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collectionAddress",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{collectionAddress}/nfts": {
            "get": {
                "description": "Get nfts of a Collectionc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nfts of a Collectionc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collectionAddress",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{collectionAddress}/nfts/{tokenID}": {
            "get": {
                "description": "Get nft detail of a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nft detail of a Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collectionAddress",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{collectionAddress}/nfts/{tokenID}/content": {
            "get": {
                "description": "Get nft content of a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nft content of a Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collectionAddress",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/nfts": {
            "get": {
                "description": "Get Nfts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get Nfts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/owner-address/{ownerAddress}/nfts": {
            "get": {
                "description": "Get nfts of a wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nfts of a wallet address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ownerAddress",
                        "name": "ownerAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/quicknode/address/{walletAddress}/balance": {
            "get": {
                "description": "getaddress balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuickNode"
                ],
                "summary": "qn_addressBalance RPC Method",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BTC walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.RedisResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.JsonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/response.RespondErr"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.RedisResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "response.RespondErr": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}