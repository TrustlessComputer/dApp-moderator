{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server TC-DAPP server.",
        "title": "tcDAPP APIs",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/dapp-moderator/v1",
    "paths": {
        "/admin/redis": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Upsert Redis",
                "parameters": [
                    {
                        "description": "Upsert redis key",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertRedisRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/admin/redis/{key}": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auction/detail/{contractAddress}/{tokenID}": {
            "get": {
                "description": "auctionDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auction"
                ],
                "summary": "auctionDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/auction/list-bid": {
            "get": {
                "description": "listBid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auction"
                ],
                "summary": "listBid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DB Auction ID",
                        "name": "dbAuctionID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/nonce": {
            "post": {
                "description": "Generate a message for user's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Generate a message",
                "parameters": [
                    {
                        "description": "Generate message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.GenerateMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/nonce/verify": {
            "post": {
                "description": "Verified the generated message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verified the generated message",
                "parameters": [
                    {
                        "description": "Verify message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.VerifyMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bfs-service/browse/{walletAddress}": {
            "get": {
                "description": "Browse files of a wallet (uploader's wallet address)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BFS-service"
                ],
                "summary": "Browse files of a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "path",
                        "name": "path",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bfs-service/content/{walletAddress}": {
            "get": {
                "description": "Get file content of a wallet address (uploader's wallet address)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BFS-service"
                ],
                "summary": "Get content file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "path",
                        "name": "path",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bfs-service/files/{walletAddress}": {
            "get": {
                "description": "Get files of a wallet (uploader's wallet address)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BFS-service"
                ],
                "summary": "Get files of a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bfs-service/info/{walletAddress}": {
            "get": {
                "description": "Get file info of a wallet address (uploader's wallet address)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BFS-service"
                ],
                "summary": "Get file info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "path",
                        "name": "path",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bns-service/default/{wallet_address}": {
            "get": {
                "description": "bnsDefault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "bnsDefault",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet_address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "updateBnsDefault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "updateBnsDefault",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateBNSDefaultRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user wallet address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bns-service/default/{wallet_address}": {
            "get": {
                "description": "bnsDefault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "bnsDefault",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet_address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "updateBnsDefault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "updateBnsDefault",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateBNSDefaultRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user wallet address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bns-service/names": {
            "get": {
                "description": "Get bns names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "Get bns names",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token id",
                        "name": "token_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "resolver",
                        "name": "resolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pfp",
                        "name": "pfp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bns-service/names/owned/{wallet_address}": {
            "get": {
                "description": "Get name of a wallet-address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "Get name of a wallet-address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet_address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bns-service/names/{name}/available": {
            "get": {
                "description": "Check bns name available for register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "Check bns name available for register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/bns-service/names/{token_id}": {
            "get": {
                "description": "detail of bns name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "Get detail of bns name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals": {
            "get": {
                "description": "Get Proposals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO - Proposal"
                ],
                "summary": "Get Proposals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "proposer",
                        "name": "proposer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "proposal_id",
                        "name": "proposal_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "separated by comma",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field: default volume",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sort default: -1 desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Proposals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO - Proposal"
                ],
                "summary": "Create Proposals",
                "parameters": [
                    {
                        "description": "requestBody",
                        "name": "requestBody",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entity.ProposalDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals/{id}/{proposal_id}": {
            "put": {
                "description": "Get Proposal's proposalID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO - Proposal"
                ],
                "summary": "Update  Proposal's proposalID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "proposal_id",
                        "name": "proposal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals/{proposal_id}": {
            "get": {
                "description": "Get Proposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO - Proposal"
                ],
                "summary": "Get Proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "proposal_id",
                        "name": "proposal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals/{proposal_id}/votes": {
            "get": {
                "description": "Get Proposal's votes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO - Proposal"
                ],
                "summary": "Get Proposal's votes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "voter",
                        "name": "voter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field: default volume",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sort default: -1 desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "proposal_id",
                        "name": "proposal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dapp-info/create": {
            "get": {
                "description": "update load dapp info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dapp-service"
                ],
                "summary": "post dapp info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections": {
            "get": {
                "description": "Get Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get Collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract",
                        "name": "contract",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "allow_empty, default: false",
                        "name": "allow_empty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default deployed_at_block",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default -1",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}": {
            "get": {
                "description": "Get Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get Collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}/activities": {
            "get": {
                "description": "Get collection's activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get collection's activities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "0: mint, 1: listing, 2: cancel listing, 3: token matched, default all",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}/attributes": {
            "get": {
                "description": "Get Collection's attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get Collection's attributes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trait_type",
                        "name": "trait_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "value",
                        "name": "value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}/chart": {
            "get": {
                "description": "Get collection's chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get collection's chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "date range: 7D, month - default 7D",
                        "name": "date_range",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}/nft-owners": {
            "get": {
                "description": "Get marketplace Nft owners of a collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get marketplace Nft owners of a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field: default volume",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sort default: -1 desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}/nfts": {
            "get": {
                "description": "Get marketplace Nfts of a collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get marketplace Nfts of a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "min,max - separated by comma",
                        "name": "rarity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min,max - separated by comma",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "key:value,key:value - separated by comma ex: Base colour:Red,Base colour:Orange",
                        "name": "attributes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token id",
                        "name": "token_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default: all",
                        "name": "is_big_file",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default: all",
                        "name": "buyable",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field: default volume",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sort default: -1 desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/collections/{contract_address}/nfts/{token_id}": {
            "get": {
                "description": "Get marketplace Nft's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get marketplace Nft's detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/contract/{contract_address}/token/{token_id}/activities": {
            "get": {
                "description": "Get token's activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get token's activities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "0: open, 1: cancel, 2: done, default all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/listing/{contract_address}/token/{token_id}": {
            "get": {
                "description": "Get market place listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get market place listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "0: open, 1: cancel, 2: done, default all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/nfts": {
            "get": {
                "description": "Get marketplace Nfts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get marketplace Nfts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/offers/{contract_address}/token/{token_id}": {
            "get": {
                "description": "Get market place offers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get market place offers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contract_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "0: open, 1: cancel, 2: done, default all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/wallet/{wallet_address}/listing": {
            "get": {
                "description": "listing of a profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get listing of a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet_address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "0: open, 1: cancel, 2: done, default all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/wallet/{wallet_address}/offer": {
            "get": {
                "description": "Offers of a profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get offers of a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet_address",
                        "name": "wallet_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "0: open, 1: cancel, 2: done, default all",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections": {
            "get": {
                "description": "Get Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get Collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract",
                        "name": "contract",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "allow_empty, default: false",
                        "name": "allow_empty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default deployed_at_block",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default -1",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{contractAddress}": {
            "get": {
                "description": "Get Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get Collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Update Collection",
                "parameters": [
                    {
                        "description": "UpdateCollection",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.UpdateCollection"
                        }
                    },
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{contractAddress}/nfts": {
            "get": {
                "description": "Get nfts of a Collectionc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nfts of a Collectionc",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "is_big_file",
                        "name": "is_big_file",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{contractAddress}/nfts/{tokenID}": {
            "get": {
                "description": "Get nft detail of a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nft detail of a Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/collections/{contractAddress}/nfts/{tokenID}/content": {
            "get": {
                "description": "Get nft content of a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get nft content of a Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/nfts": {
            "get": {
                "description": "Get Nfts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get Nfts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/owner-address/{ownerAddress}/nfts": {
            "get": {
                "description": "Get tokens of a wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "Get tokens of a wallet address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ownerAddress",
                        "name": "ownerAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nft-explorer/refresh-nft/contracts/{contractAddress}/token/{tokenID}": {
            "get": {
                "description": "refresh-nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nft-explorer"
                ],
                "summary": "refresh-nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/histories": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "confirm profile's history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "confirm profile's history",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfirmHistoriesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create profile's history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Create profile's history",
                "parameters": [
                    {
                        "description": "Generate message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.CreateHistoryMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Current user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Current user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}": {
            "get": {
                "description": "User profile via wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile via wallet address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/allowed-list/existed": {
            "get": {
                "description": "Check profile is received faucet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Check profile is received faucet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/collections": {
            "get": {
                "description": "Current user collections (created collections and collection has the owned nft)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Current user collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract",
                        "name": "contract",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default deployed_at_block",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default -1",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/histories": {
            "get": {
                "description": "Current user histories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Current user histories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tx_hash",
                        "name": "tx_hash",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default deployed_at_block",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default -1",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/tokens/bought": {
            "get": {
                "description": "Current user bouhght-tokens  (the tokens that the user has spent)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Current user bouhght-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default token_id_int",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default -1",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/quicknode/address/{walletAddress}/balance": {
            "get": {
                "description": "getaddress balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuickNode"
                ],
                "summary": "qn_addressBalance RPC Method",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BTC walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.RedisResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/soul/capture": {
            "post": {
                "description": "SoulCaptureImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soul"
                ],
                "summary": "SoulCaptureImage",
                "parameters": [
                    {
                        "description": "request data",
                        "name": "requestdata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CaptureSoulTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/soul/nfts": {
            "get": {
                "description": "Soul's Nfts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soul"
                ],
                "summary": "Get Soul's Nfts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "min,max - separated by comma",
                        "name": "rarity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min,max - separated by comma",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "key:value,key:value - separated by comma ex: Base colour:Red,Base colour:Orange",
                        "name": "attributes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token id",
                        "name": "token_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default: all",
                        "name": "is_big_file",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default: all",
                        "name": "buyable",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field: default volume",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sort default: -1 desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/soul/nfts/{token_id}": {
            "get": {
                "description": "Soul's Nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soul"
                ],
                "summary": "Get Soul's Nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/soul/signature": {
            "post": {
                "description": "Create signature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soul"
                ],
                "summary": "Create signature",
                "parameters": [
                    {
                        "description": "request data",
                        "name": "requestdata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateSignatureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/time": {
            "get": {
                "description": "Get server's time (UTC)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get server's time (UTC)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/token-explorer/token/{address}": {
            "get": {
                "description": "Update token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token-explorer"
                ],
                "summary": "Update token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Get token detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token-explorer"
                ],
                "summary": "Get token detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "contractAddress",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/token-explorer/tokens": {
            "get": {
                "description": "Get tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token-explorer"
                ],
                "summary": "Get tokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/tools//compile-contract": {
            "get": {
                "description": "Get bns names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BNS-service"
                ],
                "summary": "Get bns names",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/upload/file": {
            "get": {
                "description": "Get uploaded Files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Get uploaded Files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "token_id",
                        "name": "token_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "wallet_address",
                        "name": "wallet_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tx_hash",
                        "name": "tx_hash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "0: new, 1: has tx_hash and not fully uploaded to blockchain, 2: done. Statuses are separated by comma",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Upload File",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/upload/file-size": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload and compress file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Upload and compress file",
                "parameters": [
                    {
                        "description": "requestBody",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CompressFileSize"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/multipart": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create multipart upload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Create multipart upload",
                "parameters": [
                    {
                        "description": "Create multipart upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateMultipartUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/multipart-fake": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload File multipart fake",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Upload File multipart fake",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/multipart/{uploadID}": {
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload multipart file",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Upload multipart file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "upload ID",
                        "name": "uploadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "part number",
                        "name": "partNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Finish multipart upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Finish multipart upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "upload ID",
                        "name": "uploadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request data",
                        "name": "requestData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CompleteMultipartUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/{file_id}/chunks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get chunks of the uploaded file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Get chunks of the uploaded file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "fileID",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tx_hash",
                        "name": "tx_hash",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "0: new, 1: processing, 2: done - default: all",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/{file_id}/chunks/{chunk_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get chunk by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "Get chunk by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "fileID",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chunk_id",
                        "name": "chunk_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "0: new, 1: processing, 2: done - default: all",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/{file_id}/chunks/{chunk_id}/tx_hash/{tx_hash}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update tx_hash for a chunk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "update tx_hash for a chunk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file_id",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chunk_id",
                        "name": "chunk_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tx_hash",
                        "name": "tx_hash",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/upload/file/{file_id}/tx_hash/{tx_hash}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update tx_hash for the uploaded file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploader"
                ],
                "summary": "update tx_hash for the uploaded file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file_id",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tx_hash",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.UpdateUploadedFileTxHash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UploadResponse"
                        }
                    }
                }
            }
        },
        "/wallets/{walletAddress}": {
            "get": {
                "description": "Get Wallet's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Get Wallet's info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/wallets/{walletAddress}/txs": {
            "get": {
                "description": "Get Wallet's txs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Get Wallet's txs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ProposalDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_draft": {
                    "type": "boolean"
                },
                "proposal_id": {
                    "description": "proposalID from chain",
                    "type": "string"
                },
                "receiver_address": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "request.CaptureSoulTokenReq": {
            "type": "object",
            "required": [
                "contract_address",
                "token_id"
            ],
            "properties": {
                "contract_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "request.CompleteMultipartUploadRequest": {
            "type": "object",
            "properties": {
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "request.CompressFileSize": {
            "type": "object",
            "properties": {
                "file_content": {
                    "type": "string"
                }
            }
        },
        "request.ConfirmHistoriesReq": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "btc_hash": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "tx_hash": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "request.CreateMultipartUploadRequest": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                }
            }
        },
        "request.CreateSignatureRequest": {
            "type": "object",
            "properties": {
                "wallet_address": {
                    "type": "string"
                }
            }
        },
        "request.UpdateBNSDefaultRequest": {
            "type": "object",
            "properties": {
                "token_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateTokenReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "social": {
                    "type": "object",
                    "properties": {
                        "discord": {
                            "type": "string"
                        },
                        "instagram": {
                            "type": "string"
                        },
                        "medium": {
                            "type": "string"
                        },
                        "telegram": {
                            "type": "string"
                        },
                        "twitter": {
                            "type": "string"
                        },
                        "website": {
                            "type": "string"
                        }
                    }
                },
                "symbol": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "request.UpsertRedisRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.JsonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/response.RespondErr"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.RedisResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "response.RespondErr": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.UploadResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structure.CreateHistoryMessage": {
            "type": "object",
            "properties": {
                "btc_tx_hash": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "dapp_type": {
                    "type": "string"
                },
                "decimal": {
                    "type": "integer"
                },
                "from_address": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "to_address": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structure.GenerateMessage": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "walletType": {
                    "type": "string"
                }
            }
        },
        "structure.Social": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "structure.UpdateCollection": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "social": {
                    "$ref": "#/definitions/structure.Social"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "structure.UpdateUploadedFileTxHash": {
            "type": "object",
            "properties": {
                "token_id": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                }
            }
        },
        "structure.VerifyMessage": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
